name: Continuous Deployment

on:
  push:
    branches: [ master ]
    tags: [ 'v*' ]

env:
  GO_VERSION: '1.24'
  NODE_VERSION: '18'
  IMAGE_NAME: gcr.io/${{ vars.GCP_PROJECT_ID }}/gpxtoolkit
  REGISTRY: gcr.io

jobs:
  build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    if: |
      (github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')) ||
      (github.event_name == 'push' && startsWith(github.ref, 'refs/tags/'))

    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_CICD_SA_KEY }}

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v2

    - name: Configure Docker to use gcloud
      run: gcloud auth configure-docker --quiet

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha,prefix={{branch}}-
          type=raw,value=latest,enable={{is_default_branch}}
          type=ref,event=tag

    - name: Get Git information
      id: git
      run: |
        echo "hash=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
        echo "tag=$(git describe --tags --exact-match 2>/dev/null || echo "")" >> $GITHUB_OUTPUT

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        build-args: |
          GIT_HASH=${{ steps.git.outputs.hash }}
          GIT_TAG=${{ steps.git.outputs.tag }}

  deploy-alpha:
    name: Deploy to Alpha Environment
    runs-on: ubuntu-latest
    needs: build-and-push
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')

    steps:
    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_CICD_SA_KEY }}

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v2

    - name: Deploy to Alpha Cloud Run
      run: |
        gcloud run deploy ${{ vars.ALPHA_SERVICE_NAME }} \
          --image=${{ env.IMAGE_NAME }}:latest \
          --region=${{ vars.ALPHA_SERVICE_REGION }} \
          --platform=managed \
          --update-env-vars=ELEVATION_URL=${{ vars.ELEVATION_URL }},ELEVATION_TOKEN=${{ secrets.ELEVATION_TOKEN }} \
          --allow-unauthenticated

  deploy-prod:
    name: Deploy to Production Environment
    runs-on: ubuntu-latest
    needs: build-and-push
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')

    steps:
    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_CICD_SA_KEY }}

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v2

    - name: Get tag name
      id: tag
      run: |
        echo "name=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

    - name: Deploy to Production Cloud Run
      run: |
        gcloud run deploy ${{ vars.PROD_SERVICE_NAME }} \
          --image=${{ env.IMAGE_NAME }}:${{ steps.tag.outputs.name }} \
          --region=${{ vars.PROD_SERVICE_REGION }} \
          --platform=managed \
          --update-env-vars=ELEVATION_URL=${{ vars.ELEVATION_URL }},ELEVATION_TOKEN=${{ secrets.ELEVATION_TOKEN }} \
          --allow-unauthenticated
